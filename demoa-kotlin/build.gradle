android {
    compileSdkVersion Integer.valueOf(version_compileSdkVersion)
//    buildToolsVersion version_buildToolsVersion

    defaultConfig {
        applicationId "sviolet.demoakotlin"
        minSdkVersion Integer.valueOf(version_minSdkVersion)
        targetSdkVersion Integer.valueOf(version_targetSdkVersion)
        versionCode Integer.valueOf(version_projectVersionCode)
        versionName version_projectVersionName

        //[MultiDex]true:多dex允许,突破类65535的限制
        multiDexEnabled true

        ndk {
            //使得APK中只包含指定版本的so库(AS3.2以后armeabi可能被抛弃)
            abiFilters "armeabi-v7a"
//            abiFilters "armeabi", "armeabi-v7a", "x86"
        }

//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    dexOptions {
        //dex编译的最大内存(2g/4g, 4g会较快)
        javaMaxHeapSize dex_maxHeapSize

        //[MultiDex]与multiDexEnabled配套使用, 设置单Dex最大方法数, 一般情况下设置40000
        preDexLibraries = false
        additionalParameters = ['--multi-dex',
                                '--set-max-idx-number=40000']
    }

    buildTypes {
        release {
            postprocessing {
                removeUnusedCode false
                removeUnusedResources false
                obfuscate false
                optimizeCode false
                debuggable false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                //自定义参数, 程序中BuildConfig._DEBUG获得
                buildConfigField "boolean", "_DEBUG", "false"
            }
        }
        debug {
            postprocessing {
                removeUnusedCode false
                removeUnusedResources false
                obfuscate false
                optimizeCode false
                debuggable true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                //自定义参数, 程序中BuildConfig._DEBUG获得
                buildConfigField "boolean", "_DEBUG", "true"
            }
        }
    }

    productFlavors {
    }

    sourceSets {
        main {
            //指定JNI的so库路径
            jniLibs.srcDirs = ['libs']
        }
    }

}

dependencies {
    //implementation依赖的库, 对上一层依赖不可见. api依赖的库, 对上一层依赖可见
    implementation fileTree(dir: 'libs', include: ['*.jar'])//这个配置会自动在混淆时引入Jar包, 不要在proguard-rules.pro中配置-libraryjars, 否则会报错!
    implementation project(':turquoise') { group 'com.github.shepherdviolet.turquoise'; version version_projectVersionName }//指定groupId和version, artifactId为project名
    implementation project(':turquoise-imageloader') { group 'com.github.shepherdviolet.turquoise'; version version_projectVersionName }//指定groupId和version, artifactId为project名
    implementation "com.android.support:support-v4:$version_supportVersion"
    implementation "com.android.support:appcompat-v7:$version_supportVersion"
}
